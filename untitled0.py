# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LkQ_h4WscKUkczywU5BvPjMARMHR4x2h
"""

# prompt: wap to print no. 1 to 100 and check if it is multiple of three, print fizz , if multiple of five print buzz and if multiple of both print fizz buzz

for i in range(1, 101):
  if i % 3 == 0 and i % 5 == 0:
    print("FizzBuzz")
  elif i % 3 == 0:
    print("Fizz")
  elif i % 5 == 0:
    print("Buzz")
  else:
    print(i)

# prompt: wap to check if it is prime or not

def is_prime(n):

  if n <= 1:
    return False
  for i in range(2, int(n ** 0.5) + 1):
    if n % i == 0:
      return False
  return True


number = 17
if is_prime(number):
  print(number, "is a prime number")
else:
  print(number, "is not a prime number")

# prompt: wap to input a string and print if it is pallindrome or not

def is_palindrome(s):

  s = s.lower()  # Ignore case
  return s == s[::-1]

string = input("Enter a string: ")

if is_palindrome(string):
  print(string, "is a palindrome")
else:
  print(string, "is not a palindrome")

# prompt: wap to print largest digit of a given number

def largest_digit(n):

  max_digit = 0
  while n > 0:
    digit = n % 10
    if digit > max_digit:
      max_digit = digit
    n = n // 10
  return max_digit


number = int(input("Enter a number: "))


result = largest_digit(number)
print("Largest digit:", result)

# prompt: wap to sum of digits of a given number

def sum_of_digits(n):

  sum = 0
  while n > 0:
    digit = n % 10
    sum += digit
    n = n // 10
  return sum


number = int(input("Enter a number: "))
result = sum_of_digits(number)
print("Sum of digits:", result)

